// Code generated by protoc-gen-go. DO NOT EDIT.
// source: histogram.proto

package metric

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Histogram struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Values               []float64         `protobuf:"fixed64,3,rep,packed,name=values,proto3" json:"values,omitempty"`
	Properties           map[string]string `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Histogram) Reset()         { *m = Histogram{} }
func (m *Histogram) String() string { return proto.CompactTextString(m) }
func (*Histogram) ProtoMessage()    {}
func (*Histogram) Descriptor() ([]byte, []int) {
	return fileDescriptor_220cfad95bf91e19, []int{0}
}

func (m *Histogram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Histogram.Unmarshal(m, b)
}
func (m *Histogram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Histogram.Marshal(b, m, deterministic)
}
func (m *Histogram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Histogram.Merge(m, src)
}
func (m *Histogram) XXX_Size() int {
	return xxx_messageInfo_Histogram.Size(m)
}
func (m *Histogram) XXX_DiscardUnknown() {
	xxx_messageInfo_Histogram.DiscardUnknown(m)
}

var xxx_messageInfo_Histogram proto.InternalMessageInfo

func (m *Histogram) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Histogram) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Histogram) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Histogram) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*Histogram)(nil), "metric.Histogram")
	proto.RegisterMapType((map[string]string)(nil), "metric.Histogram.PropertiesEntry")
}

func init() { proto.RegisterFile("histogram.proto", fileDescriptor_220cfad95bf91e19) }

var fileDescriptor_220cfad95bf91e19 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xc8, 0x2c, 0x2e,
	0xc9, 0x4f, 0x2f, 0x4a, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb, 0x4d, 0x2d,
	0x29, 0xca, 0x4c, 0x56, 0xba, 0xcd, 0xc8, 0xc5, 0xe9, 0x01, 0x93, 0x13, 0x12, 0xe2, 0x62, 0xc9,
	0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x14, 0xb8, 0xb8,
	0x53, 0x52, 0x8b, 0x93, 0x8b, 0x32, 0x0b, 0x4a, 0x32, 0xf3, 0xf3, 0x24, 0x98, 0xc0, 0x52, 0xc8,
	0x42, 0x42, 0x62, 0x5c, 0x6c, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0xc5, 0x12, 0xcc, 0x0a, 0xcc, 0x1a,
	0x8c, 0x41, 0x50, 0x9e, 0x90, 0x23, 0x17, 0x57, 0x41, 0x51, 0x7e, 0x41, 0x6a, 0x51, 0x49, 0x66,
	0x6a, 0xb1, 0x04, 0xab, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0xa2, 0x1e, 0xc4, 0x62, 0x3d, 0xb8, 0xa5,
	0x7a, 0x01, 0x70, 0x35, 0xae, 0x79, 0x25, 0x45, 0x95, 0x41, 0x48, 0x9a, 0xa4, 0x6c, 0xb9, 0xf8,
	0xd1, 0xa4, 0x85, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0xa1, 0x4e, 0x04, 0x31, 0x85, 0x44, 0xb8,
	0x58, 0xc1, 0x36, 0x42, 0xdd, 0x06, 0xe1, 0x58, 0x31, 0x59, 0x30, 0x26, 0xb1, 0x81, 0x3d, 0x6b,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x91, 0x7a, 0x49, 0xff, 0x00, 0x00, 0x00,
}
